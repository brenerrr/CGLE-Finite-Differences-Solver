function [b] = rhs(A, alpha, theta, p, l, R)

nA = length(A);
b = zeros(nA,1);

     
for i = 2:nA-1
    b(i) = complex(1, alpha) * (1 - theta) * p * A(i-1) + ...
           ( 1 - 2 * complex(1, alpha) * (1 - theta) * p + l * R ) * A(i) + ...
           complex(1, alpha) * (1 - theta) * p * A(i+1);
end

% Boundary conditions
b(1) = ( 1 - 4/3 * complex(1, alpha) * (1 - theta) * p + l*R ) * A(1) + ...
     5/6 * complex(1, alpha) * (1 - theta) * p * A(2) - ... 
     1/6 * complex(1, alpha) * (1 - theta) * p * A(end-1) + ...
     2/3 * complex(1, alpha) * (1 - theta) * p * A(end); 
 
b(end) = 2/3 * complex(1, alpha) * (1 - theta) * p * A(1) - ...
         1/6 * complex(1, alpha) * (1 - theta) * p * A(2) + ...
         5/6 * complex(1, alpha) * (1 - theta) * p * A(end-1) + ...
         (1 - 4/3 * complex(1, alpha) * (1 - theta) * p + l*R) * A(end);

end